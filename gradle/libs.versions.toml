[versions]
jackson = "2.19.2"
slf4j = "2.0.17"
elasticsearch = "9.0.4"
freemarker = "2.3.34"
classgraph = "4.8.181"
testng = "7.11.0"
log4j = "2.25.1"
wiremock = "3.13.1"
jnanoid = "2.0.0"
awssdk = "2.32.12"
gcs = "26.64.0"
system-stubs = "2.1.8"
fastcsv = "4.0.0"
poi = "5.4.1"
parsson = "1.1.7"
simplejavamail = "8.12.6"
swagger = "2.1.31"
jsonpath = "2.9.0"
jsonsmart = "2.5.2"
commons-compress = "1.28.0"
commons-io = "2.20.0"
commons-lang = "3.18.0"
sqlite = "3.50.3.0"
jakarta-mail = "2.1.3"
angus-mail = "2.0.3"
pkl = "0.29.0"
adls = "12.24.1"
azure = "1.16.3"
guava = "33.4.8-jre"
openlineage = "1.36.0"
kotlin = "2.2.0"
kotlin-mu = "3.0.5"
rocksdb = "10.2.1"
jetty = "12.0.23"
netty = "4.2.3.Final"
rhino = "1.8.0"
nimbus = "10.4"
otel = "1.51.0"
otel-instrumentation = "2.17.1-alpha"

[libraries]
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
jackson-yaml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml", version.ref = "jackson" }
jackson-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson" }
slf4j = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
elasticsearch-java = { module = "co.elastic.clients:elasticsearch-java", version.ref = "elasticsearch" }
freemarker = { module = "org.freemarker:freemarker", version.ref = "freemarker" }
classgraph = { module = "io.github.classgraph:classgraph", version.ref = "classgraph" }
testng = { module = "org.testng:testng", version.ref = "testng" }
log4j-core = { module = "org.apache.logging.log4j:log4j-core", version.ref = "log4j" }
log4j-slf4j2 = { module = "org.apache.logging.log4j:log4j-slf4j2-impl", version.ref = "log4j" }
wiremock = { module = "org.wiremock:wiremock-jetty12", version.ref = "wiremock" }
jnanoid = { module = "com.aventrix.jnanoid:jnanoid", version.ref = "jnanoid" }
awssdk-s3 = { module = "software.amazon.awssdk:s3", version.ref = "awssdk" }
awssdk-sts = { module = "software.amazon.awssdk:sts", version.ref = "awssdk" }
gcs-bom = { module = "com.google.cloud:libraries-bom", version.ref = "gcs" }
gcs = { module = "com.google.cloud:google-cloud-storage" }
gcs-control = { module = "com.google.cloud:google-cloud-storage-control" }
adls = { module = "com.azure:azure-storage-file-datalake", version.ref = "adls" }
azure-identity = { module = "com.azure:azure-identity", version.ref = "azure" }
system-stubs = { module = "uk.org.webcompere:system-stubs-testng", version.ref = "system-stubs" }
fastcsv = { module = "de.siegmar:fastcsv", version.ref = "fastcsv" }
apache-poi = { module = "org.apache.poi:poi", version.ref = "poi" }
apache-poi-ooxml = { module = "org.apache.poi:poi-ooxml", version.ref = "poi" }
parsson = { module = "org.eclipse.parsson:parsson", version.ref = "parsson" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }
simple-java-mail = { module = "org.simplejavamail:simple-java-mail", version.ref = "simplejavamail" }
swagger-parser = { module = "io.swagger.parser.v3:swagger-parser", version.ref = "swagger" }
json-path = { module = "com.jayway.jsonpath:json-path", version.ref = "jsonpath" }
json-smart = { module = "net.minidev:json-smart", version.ref = "jsonsmart" }
commons-compress = { module = "org.apache.commons:commons-compress", version.ref = "commons-compress" }
commons-io = { module = "commons-io:commons-io", version.ref = "commons-io" }
commons-lang = { module = "org.apache.commons:commons-lang3", version.ref = "commons-lang" }
sqlite = { module = "org.xerial:sqlite-jdbc", version.ref = "sqlite" }
jakarta-mail = { module = "com.sun.mail:jakarta.mail", version.ref = "jakarta-mail" }
angus-mail = { module = "org.eclipse.angus:angus-mail", version.ref = "angus-mail" }
pkl-config = { module = "org.pkl-lang:pkl-config-kotlin", version.ref = "pkl" }
pkl-codegen = { module = "org.pkl-lang:pkl-codegen-kotlin", version.ref = "pkl" }
openlineage = { module = "io.openlineage:openlineage-java", version.ref = "openlineage" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-logging = { module = "io.github.microutils:kotlin-logging-jvm", version.ref = "kotlin-mu" }
rocksdb = { module = "org.rocksdb:rocksdbjni", version.ref = "rocksdb" }
jetty = { module = "org.eclipse.jetty:jetty-bom", version.ref = "jetty" }
jetty-http = { module = "org.eclipse.jetty:jetty-http", version.ref = "jetty" }
jetty-server = { module = "org.eclipse.jetty:jetty-server", version.ref = "jetty" }
jetty-http2-common = { module = "org.eclipse.jetty.http2:jetty-http2-common", version.ref = "jetty" }
jetty-http2-hpack = { module = "org.eclipse.jetty.http2:jetty-http2-hpack", version.ref = "jetty" }
netty-common = { module = "io.netty:netty-common", version.ref = "netty" }
rhino = { module = "org.mozilla:rhino", version.ref = "rhino" }
nimbus = { module = "com.nimbusds:nimbus-jose-jwt", version.ref = "nimbus" }
otel-bom = { module = "io.opentelemetry:opentelemetry-bom", version.ref = "otel" }
otel-instrumentation-bom = { module = "io.opentelemetry.instrumentation:opentelemetry-instrumentation-bom-alpha", version.ref = "otel-instrumentation" }
otel-api = { module = "io.opentelemetry:opentelemetry-api" }
otel-sdk = { module = "io.opentelemetry:opentelemetry-sdk" }
otel-exporter = { module = "io.opentelemetry:opentelemetry-exporter-otlp" }
otel-autoconfig = { module = "io.opentelemetry:opentelemetry-sdk-extension-autoconfigure" }
otel-appender = { module = "io.opentelemetry.instrumentation:opentelemetry-log4j-appender-2.17" }

[bundles]
java-test = [ "jnanoid", "testng", "wiremock" ]
log4j = [ "log4j-core", "log4j-slf4j2" ]
otel = [ "otel-api", "otel-sdk", "otel-exporter", "otel-autoconfig", "otel-appender" ]
poi = [ "apache-poi", "apache-poi-ooxml" ]

[plugins]
shadow = { id = "com.gradleup.shadow", version = "9.0.0-beta5" }
git-publish = { id = "org.ajoberstar.git-publish", version = "4.2.2" }
pkl = { id = "org.pkl-lang", version = "0.29.0" }
