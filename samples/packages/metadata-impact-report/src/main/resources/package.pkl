/* SPDX-License-Identifier: Apache-2.0
   Copyright 2024 Atlan Pte. Ltd. */
amends "modulepath:/Config.pkl"
import "pkl:semver"

packageId = "@csa/metadata-impact-report"
packageName = "Metadata Impact Report"
version = semver.Version(read("prop:VERSION_NAME"))
description = "Produce a detailed report of different areas of potential impact, based on the metadata available."
iconUrl = "http://assets.atlan.com/assets/ph-projector-screen-chart-light.svg"
docsUrl = "https://solutions.atlan.com/metadata-impact-report/"
implementationLanguage = "Kotlin"
containerImage = "ghcr.io/atlanhq/\(name):\(version)"
containerImagePullPolicy = if (version.toString().endsWith("-SNAPSHOT")) "Always" else "IfNotPresent"
containerCommand {
  "/dumb-init"
  "--"
  "java"
  "com.atlan.pkg.mdir.Reporter"
}
outputs {
  files {
    ["debug-logs"] = "/tmp/debug.log"
    ["mdir"] = "/tmp/mdir.xlsx"
    ["overview"] = "/tmp/overview.csv"
    ["aum"] = "/tmp/aum.csv"
    ["awd"] = "/tmp/awd.csv"
    ["awdc"] = "/tmp/awdc.csv"
    ["awdu"] = "/tmp/awdu.csv"
    ["awo"] = "/tmp/awo.csv"
    ["awog"] = "/tmp/awog.csv"
    ["awou"] = "/tmp/awou.csv"
    ["dla"] = "/tmp/dla.csv"
    ["dlaxl"] = "/tmp/dlaxl.csv"
    ["gcm"] = "/tmp/gcm.csv"
    ["gtm"] = "/tmp/gtm.csv"
    ["gum"] = "/tmp/gum.csv"
    ["hqv"] = "/tmp/hqv.csv"
    ["sut"] = "/tmp/sut.csv"
    ["tla"] = "/tmp/tla.csv"
    ["tlawl"] = "/tmp/tlawl.csv"
    ["tlaxl"] = "/tmp/tlaxl.csv"
    ["tlaxq"] = "/tmp/tlaxq.csv"
    ["tlaxu"] = "/tmp/tlaxu.csv"
    ["uta"] = "/tmp/uta.csv"
    ["utq"] = "/tmp/utq.csv"
  }
}
keywords {
  "kotlin"
  "utility"
}
preview = true

uiConfig {
  tasks {
    ["Outputs"] {
      description = "Report outputs"
      inputs {
        ["include_glossary"] = new Radio {
          title = "Generate glossary?"
          required = true
          possibleValues {
            ["TRUE"] = "Yes"
            ["FALSE"] = "No (Excel only)"
          }
          default = "TRUE"
          helpText = "Whether to generate a glossary of metadata metrics used in the report. (An Excel will always be generated.)"
          fallback = default
        }
        ["glossary_name"] = new TextInput {
          title = "Glossary name"
          required = true
          helpText = "Name of the glossary in which to store the metadata metrics."
          placeholderText = "Metadata metrics"
          fallback = placeholderText
        }
        ["include_details"] = new BooleanInput {
          title = "Include details"
          required = true
          helpText = "Whether to include detailed results (Yes), or only the headline metrics (No) in the Excel file produced."
          fallback = false
        }
      }
    }
    ["Delivery"] {
      description = "Where to send"
      inputs {
        ["file_format"] = new Radio {
          title = "File format"
          required = true
          helpText = "Select whether you want multiple CSV files or a single XLSX file."
          possibleValues {
            ["XLSX"] = "Single Excel file"
            ["CSV"] = "Multiple CSV files"
          }
          default = "XLSX"
          fallback = default
        }
        ["delivery_type"] = new Radio {
          title = "Export via"
          required = true
          helpText = "Select how you want to receive the exported file."
          possibleValues {
            ["DIRECT"] = "Direct download"
            ["EMAIL"] = "Email"
            ["CLOUD"] = "Object storage"
          }
          default = "DIRECT"
          fallback = default
        }
        ["email_addresses"] = new TextInput {
          title = "Email address(es)"
          helpText = "Provide any email addresses you want the report sent to, separated by commas."
          required = false
          placeholderText = "one@example.com,two@example.com"
        }
        ["target_prefix"] = new TextInput {
          title = "Prefix (path)"
          helpText = "Enter the directory (path) within the object store into which to upload the exported file."
          placeholderText = "path/to/file"
          width = 4
        }
        ["target_key"] = new TextInput {
          title = "Object key (filename)"
          helpText = "Enter the object key (filename), including its extension, within the object store and prefix."
          placeholderText = "mdir.xlsx"
          width = 4
        }
        ["cloud_target"] = new CredentialInput {
          title = "Upload export to"
          required = true
          credType = "csa-connectors-objectstore"
          helpText = "Enter details for the object store to which to upload the exported file."
        }
      }
    }
  }
  rules {
    new UIRule {
      whenInputs { ["include_glossary"] = "TRUE" }
      required { "glossary_name" }
    }
    new UIRule {
      whenInputs { ["delivery_type"] = "EMAIL" }
      required { "email_addresses" }
    }
    new UIRule {
      whenInputs { ["delivery_type"] = "CLOUD" }
      required {
        "target_prefix"
        "target_key"
        "cloud_target"
      }
    }
  }
}
