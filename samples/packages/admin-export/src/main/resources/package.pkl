/* SPDX-License-Identifier: Apache-2.0
   Copyright 2023 Atlan Pte. Ltd. */
amends "modulepath:/Framework.pkl"
import "pkl:semver"

packageId = "@csa/admin-export"
packageName = "Admin Export"
version = semver.Version(read("prop:VERSION_NAME"))
description = "Exports key administrative details from a tenant."
iconUrl = "https://assets.atlan.com/assets/ph-user-circle-gear-light.svg"
docsUrl = "https://solutions.atlan.com/admin-export/"
implementationLanguage = "Kotlin"
containerImage = "ghcr.io/atlanhq/\(name):\(version)"
containerImagePullPolicy = if (version.toString().endsWith("-SNAPSHOT")) "Always" else "IfNotPresent"
containerCommand {
  "/dumb-init"
  "--"
  "java"
  "com.atlan.pkg.ae.AdminExporter"
}
outputs {
  files {
    ["debug-logs"] = "/tmp/debug.log"
    ["admin-export"] = "/tmp/admin-export.xlsx"
    ["users"] = "/tmp/users.csv"
    ["groups"] = "/tmp/groups.csv"
    ["personas"] = "/tmp/personas.csv"
    ["purposes"] = "/tmp/purposes.csv"
    ["policies"] = "/tmp/policies.csv"
  }
}
keywords {
  "kotlin"
  "utility"
  "admin"
  "export"
}
preview = true

uiConfig {
  tasks {
    ["Scope"] {
      description = "What to include"
      inputs {
        ["objects_to_include"] = new DropDown {
          title = "Objects to include"
          possibleValues {
            ["users"] = "Users"
            ["groups"] = "Groups"
            ["personas"] = "Personas"
            ["purposes"] = "Purposes"
            ["policies"] = "Policies"
          }
          helpText = "Select the objects you want to include in the exported Excel file."
          multiSelect = true
          required = true
          fallback = List("users", "groups")
        }
        ["include_native_policies"] = new BooleanInput {
          title = "Include out-of-the-box policies?"
          helpText = "Whether to include out-of-the-box policies (Yes) or only those policies you can manage directly (No)."
          required = false
          fallback = false
        }
      }
    }
    ["Delivery"] {
      description = "Where to send"
      inputs {
        ["file_format"] = new Radio {
          title = "File format"
          required = true
          helpText = "Select whether you want multiple CSV files or a single XLSX file."
          possibleValues {
            ["XLSX"] = "Single Excel file"
            ["CSV"] = "Multiple CSV files"
          }
          default = "XLSX"
          fallback = default
        }
        ["delivery_type"] = new Radio {
          title = "Export via"
          required = true
          helpText = "Select how you want to receive the exported file."
          possibleValues {
            ["DIRECT"] = "Direct download"
            ["EMAIL"] = "Email"
            ["CLOUD"] = "Object storage"
          }
          default = "DIRECT"
          fallback = default
        }
        ["email_addresses"] = new TextInput {
          title = "Email address(es)"
          helpText = "Provide any email addresses you want the extract sent to, separated by commas."
          required = true
          placeholderText = "one@example.com,two@example.com"
        }
        ["target_prefix"] = new TextInput {
          title = "Prefix (path)"
          helpText = "Enter the directory (path) within the object store into which to upload the exported file."
          placeholderText = "path/to/file"
          width = 4
          fallback = ""
        }
        ["target_key"] = new TextInput {
          title = "Object key (filename)"
          helpText = "Enter the object key (filename), including its extension, within the object store and prefix."
          placeholderText = "admin-export.xlsx"
          width = 4
          fallback = ""
        }
        ["cloud_target"] = new CredentialInput {
          title = "Upload export to"
          required = true
          credType = "csa-connectors-objectstore"
          helpText = "Enter details for the object store to which to upload the exported file."
          allowTestAuthentication = false
        }
        ["users_filename"] = new TextInput {
          title = "Users filename"
          helpText = "Enter the name of the exported users file."
          placeholderText = "users.csv"
          required = false
          fallback = placeholderText
        }
        ["groups_filename"] = new TextInput {
          title = "Groups filename"
          helpText = "Enter the name of the exported groups file."
          placeholderText = "groups.csv"
          required = false
          fallback = placeholderText
        }
        ["personas_filename"] = new TextInput {
          title = "Personas filename"
          helpText = "Enter the name of the exported personas file."
          placeholderText = "personas.csv"
          required = false
          fallback = placeholderText
        }
        ["purposes_filename"] = new TextInput {
          title = "Purposes filename"
          helpText = "Enter the name of the exported purposes file."
          placeholderText = "purposes.csv"
          required = false
          fallback = placeholderText
        }
        ["policies_filename"] = new TextInput {
          title = "Policies filename"
          helpText = "Enter the name of the exported policies file."
          placeholderText = "policies.csv"
          required = false
          fallback = placeholderText
        }
      }
    }
  }
  rules {
    new UIRule {
      whenInputs { ["delivery_type"] = "EMAIL" }
      required { "email_addresses" }
    }
    new UIRule {
      whenInputs { ["delivery_type"] = "CLOUD" }
      required {
        "target_prefix"
        "cloud_target"
      }
    }
    new UIRule {
        whenInputs {
            ["delivery_type"] = "CLOUD"
            ["file_format"] = "XLSX"
        }
        required { "target_key" }
    }
    new UIRule {
        whenInputs {
            ["delivery_type"] = "CLOUD"
            ["file_format"] = "CSV"
        }
        required {
          "users_filename"
          "groups_filename"
          "personas_filename"
          "purposes_filename"
          "policies_filename"
        }
    }
  }
}
