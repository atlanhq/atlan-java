/* SPDX-License-Identifier: Apache-2.0
   Copyright 2024 Atlan Pte. Ltd. */
amends "modulepath:/Framework.pkl"
import "pkl:semver"
import "modulepath:/Connectors.pkl"

packageId = "@csa/openapi-spec-loader"
packageName = "OpenAPI Spec Loader"
version = semver.Version(read("prop:VERSION_NAME"))
description = "Loads API specs and paths from an OpenAPI (v3) definition."
iconUrl = "http://assets.atlan.com/assets/apispec.png"
docsUrl = "https://solutions.atlan.com/openapi-spec-loader/"
implementationLanguage = "Kotlin"
containerImage = "ghcr.io/atlanhq/\(name):\(version)"
containerImagePullPolicy = if (version.toString().endsWith("-SNAPSHOT")) "Always" else "IfNotPresent"
containerCommand {
  "/dumb-init"
  "--"
  "java"
  "OpenAPISpecLoader"
}
outputs {
  files {
    ["debug-logs"] = "/tmp/debug.log"
  }
}
keywords {
  "kotlin"
  "crawler"
  "openapi"
}
preview = true
connectorType = Connectors.API

uiConfig {
  tasks {
    ["Configuration"] {
      description = "OpenAPI spec configuration"
      inputs {
        ["import_type"] = new Radio {
          title = "Import spec from"
          helpText = "Select how you want to provide the OpenAPI spec file to be imported."
          possibleValues {
            ["URL"] = "URL"
            // ["DIRECT"] = "Direct file upload"
            ["CLOUD"] = "Object storage"
          }
          default = "URL"
          fallback = default
        }
        ["spec_url"] = new TextInput {
          title = "Specification URL"
          required = true
          helpText = "Full URL to the JSON form of the OpenAPI specification."
          placeholderText = "https://petstore3.swagger.io/api/v3/openapi.json"
          fallback = ""
        }
        ["spec_file"] = new FileUploader {
          title = "Spec file"
          fileTypes { "application/json" "application/zip" "application/yaml" }
          required = false
          helpText = "Select the OpenAPI spec file containing metadata to import."
          placeholderText = "Select OpenAPI JSON or ZIP file"
          hide = true
          fallback = ""
        }
        ["spec_prefix"] = new TextInput {
          title = "Prefix (path)"
          helpText = "Enter the directory (path) within the object store from which to retrieve the OpenAPI spec file."
          placeholderText = "path/to/file"
          width = 4
          fallback = ""
        }
        ["spec_key"] = new TextInput {
          title = "Object key (filename)"
          helpText = "Enter the object key (filename), including its extension, within the object store and prefix."
          placeholderText = "openapi.json"
          width = 4
          fallback = ""
        }
        ["cloud_source"] = new CredentialInput {
          title = "Import spec from"
          required = true
          credType = "csa-connectors-objectstore"
          helpText = "Enter details for the object store from which to retrieve the OpenAPI spec containing metadata to be imported."
          allowTestAuthentication = false
        }
      }
    }
    ["Connection"] {
      description = "Connection details"
      inputs {
        ["connection_usage"] = new Radio {
          title = "Connection"
          required = true
          possibleValues {
            ["CREATE"] = "Create"
            ["REUSE"] = "Reuse"
          }
          default = "REUSE"
          helpText = "Whether to create a new connection to hold these API assets, or reuse an existing connection."
        }
        ["connection"] = new ConnectionCreator {
          title = "Connection"
          required = true
          helpText = "Enter details for a new connection to be created."
        }
        ["connection_qualified_name"] = new ConnectionSelector {
          title = "Connection"
          required = true
          helpText = "Select an existing connection to load assets into."
          width = 4
          limitToConnectors = Connectors.API.value
        }
      }
    }
  }
  rules {
    new UIRule {
      whenInputs { ["import_type"] = "URL" }
      required { "spec_url" }
    }
    new UIRule {
      whenInputs { ["import_type"] = "CLOUD" }
      required { "cloud_source" "spec_prefix" "spec_key" }
    }
    new UIRule {
      whenInputs { ["import_type"] = "DIRECT" }
      required { "spec_file" }
    }
    new UIRule {
      whenInputs { ["connection_usage"] = "REUSE" }
      required { "connection_qualified_name" }
    }
    new UIRule {
      whenInputs { ["connection_usage"] = "CREATE" }
      required { "connection" }
    }
  }
}
