/* SPDX-License-Identifier: Apache-2.0
   Copyright 2024 Atlan Pte. Ltd. */
amends "modulepath:/Config.pkl"
import "pkl:semver"
import "modulepath:/BuildInfo.pkl"
import "modulepath:/Connectors.pkl"

packageId = "@csa/relational-assets-builder"
packageName = "Relational Assets Builder"
version = semver.Version(BuildInfo.VERSION)
description = "Build (and update) relational assets managed through a CSV file."
iconUrl = "http://assets.atlan.com/assets/ph-database-light.svg"
docsUrl = "https://solutions.atlan.com/relational-assets-builder/"
implementationLanguage = "Kotlin"
containerImage = "ghcr.io/atlanhq/\(name):\(BuildInfo.VERSION)"
containerImagePullPolicy = if (BuildInfo.VERSION.endsWith("-SNAPSHOT")) "Always" else "IfNotPresent"
containerCommand {
  "/dumb-init"
  "--"
  "java"
  "com.atlan.pkg.rab.Importer"
}
outputs {
  files {
    ["debug-logs"] = "/tmp/debug.log"
  }
}
keywords {
  "kotlin"
  "utility"
}
preview = true

uiConfig {
  tasks {
    ["Source"] {
      description = "Input file"
      inputs {
        ["import_type"] = new Radio {
          title = "Import file from"
          possibleValues {
            ["DIRECT"] = "Direct file upload"
            ["CLOUD"] = "Object storage"
          }
          default = "DIRECT"
        }
        ["assets_file"] = new FileUploader {
          title = "Assets file"
          fileTypes { "text/csv" }
          required = false
          helpText = "Select the file containing the relational assets to import."
          placeholderText = "Select assets CSV file"
        }
        ["cloud_source"] = new CredentialInput {
          title = "Assets file"
          required = true
          credType = "csa-connectors-objectstore"
          helpText = "Select how you want to provide the file containing relational assets to be imported."
        }
      }
    }
    ["Options"] {
      description = "Configuration options"
      inputs {
        ["assets_upsert_semantic"] = new Radio {
          title = "Input handling"
          required = false
          possibleValues {
            ["upsert"] = "Create (full) and update"
            ["partial"] = "Create (partial) and update"
            ["update"] = "Update only"
          }
          default = "upsert"
          helpText = "Whether to allow the creation of new (full or partial) assets from the input CSV, or ensure assets are only updated if they already exist in Atlan."
        }
        ["assets_attr_to_overwrite"] = new DropDown {
          title = "Remove attributes, if empty"
          required = false
          possibleValues {
            ["certificateStatus"] = "Certificate"
            ["announcementType"] = "Announcement"
            ["displayName"] = "Display name"
            ["description"] = "Description (system)"
            ["userDescription"] = "Description (user)"
            ["ownerUsers"] = "Owners (users)"
            ["ownerGroups"] = "Owners (groups)"
            ["assignedTerms"] = "Assigned terms"
            ["readme"] = "README"
          }
          helpText = "Select attributes you want to clear (remove) from assets if their value is blank in the provided file."
          multiSelect = true
          width = 8
        }
        ["assets_fail_on_errors"] = new BooleanInput {
          title = "Fail on errors"
          required = false
          helpText = "Whether an invalid value in a field should cause the import to fail (Yes) or log a warning, skip that value, and proceed (No)."
        }
        ["assets_field_separator"] = new TextInput {
          title = "Field separator"
          required = false
          helpText = "Character used to separate fields in the input file (for example, ',' or ';')."
          placeholderText = ","
          width = 4
        }
        ["assets_batch_size"] = new NumericInput {
          title = "Batch size"
          required = false
          helpText = "Maximum number of rows to process at a time (per API request)."
          placeholderValue = 20
          width = 4
        }
        ["track_batches"] = new BooleanInput {
          title = "Track asset details"
          required = false
          hide = true
          defaultSelection = true
          helpText = "Whether to track details about every asset across batches (Yes) or only counts (No)."
        }
      }
    }
  }
  rules {
    new UIRule {
      whenInputs { ["import_type"] = "DIRECT" }
      required { "assets_file" }
    }
    new UIRule {
      whenInputs { ["import_type"] = "CLOUD" }
      required { "cloud_source" }
    }
  }
}

credentialConfig {
  name = "csa-connectors-objectstore"
  source = Connectors.S3
  icon = "http://assets.atlan.com/assets/ph-shapes-light.svg"
  helpdesk = "https://solutions.atlan.com"
  logo = "http://assets.atlan.com/assets/ph-shapes-light.svg"
  connectorType = "rest"
  commonInputs {
    ["object_store_bucket"] = new TextInput {
      title = "Bucket or container"
      required = false
      helpText = "Enter the bucket or container from which to retrieve the object store object(s)."
      placeholderText = "bucket-name"
      width = 4
    }
    ["object_store_prefix"] = new TextInput {
      title = "Prefix (path)"
      required = false
      helpText = "Enter the prefix (path) within the bucket from which to retrieve the object(s)."
      placeholderText = "path/to/files"
      width = 4
    }
    ["object_store_key"] = new TextInput {
      title = "Object key (filename)"
      required = false
      helpText = "Enter the object key (filename), including its extension, within the bucket and prefix."
      placeholderText = "file.csv"
      width = 4
    }
  }
  optionsTitle = "Cloud object store"
  options {
    ["s3"] = new NestedInput {
      title = "S3"
      helpText = "Details for accessing information from Amazon S3."
      inputs {
        ["username"] = new TextInput {
          title = "AWS access key"
          required = false
          helpText = "Enter your AWS access key."
          placeholderText = ""
          width = 4
        }
        ["password"] = new PasswordInput {
          title = "AWS secret key"
          required = false
          helpText = "Enter your AWS secret key."
          width = 4
        }
        ["extra"] = new NestedInput {
          title = "S3 details"
          inputs {
            ["region"] = new TextInput {
              title = "Region"
              required = false
              helpText = "Enter your AWS region."
              placeholderText = "us-west-1"
              width = 4
            }
          }
        }
      }
    }
    ["gcs"] = new NestedInput {
      title = "GCS"
      helpText = "Details for accessing information from Google Cloud Storage (GCS)."
      inputs {
        ["username"] = new TextInput {
          title = "Project ID"
          required = false
          helpText = "Enter the ID of the GCP project."
          placeholderText = ""
          width = 4
        }
        ["password"] = new TextInput {
          title = "Service account JSON"
          required = false
          helpText = "Enter the JSON for your service account credentials."
          placeholderText = "{\"type\":\"service_account\",\"project_id\":\"gcs-connector-399418\", ..."
          width = 8
        }
      }
    }
    ["adls"] = new NestedInput {
      title = "ADLS"
      helpText = "Details for access information from Azure Data Lake Storage (ADLS)."
      inputs {
        ["username"] = new TextInput {
          title = "Azure client ID"
          required = false
          helpText = "Enter the unique application (client) ID assigned to your app by Azure AD when the app was registered."
          width = 4
        }
        ["password"] = new TextInput {
          title = "Azure client secret"
          required = false
          helpText = "Enter your client secret."
          width = 4
        }
        ["extra"] = new NestedInput {
          title = "ADLS details"
          inputs {
            ["azure_tenant_id"] = new TextInput {
              title = "Azure tenant ID"
              required = false
              helpText = "Enter the unique identifier of the Azure Active Directory instance."
              width = 4
            }
            ["storage_account_name"] = new TextInput {
              title = "Storage account name"
              required = false
              helpText = "Enter the name of your storage account."
              width = 4
            }
          }
        }
      }
    }
  }
}
