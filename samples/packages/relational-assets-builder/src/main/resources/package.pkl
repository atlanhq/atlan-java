/* SPDX-License-Identifier: Apache-2.0
   Copyright 2024 Atlan Pte. Ltd. */
amends "modulepath:/Config.pkl"
import "pkl:semver"
import "modulepath:/BuildInfo.pkl"

packageId = "@csa/relational-assets-builder"
packageName = "Relational Assets Builder"
version = semver.Version(BuildInfo.VERSION)
description = "Build (and update) relational assets managed through a CSV file."
iconUrl = "http://assets.atlan.com/assets/ph-database-light.svg"
docsUrl = "https://solutions.atlan.com/relational-assets-builder/"
implementationLanguage = "Kotlin"
containerImage = "ghcr.io/atlanhq/\(name):\(BuildInfo.VERSION)"
containerImagePullPolicy = if (BuildInfo.VERSION.endsWith("-SNAPSHOT")) "Always" else "IfNotPresent"
containerCommand {
  "/dumb-init"
  "--"
  "java"
  "com.atlan.pkg.rab.Importer"
}
outputs {
  files {
    ["debug-logs"] = "/tmp/debug.log"
  }
}
keywords {
  "kotlin"
  "utility"
}
preview = true

uiConfig {
  tasks {
    ["Assets"] {
      description = "Assets to import"
      inputs {
        ["assets_import_type"] = new Radio {
          title = "Import assets from"
          required = true
          helpText = "Select how you want to provide the file containing relational asset to be imported."
          possibleValues {
            ["UPLOAD"] = "Direct upload"
            ["S3"] = "S3"
            ["GCS"] = "GCS"
            ["ADLS"] = "ADLS"
          }
          default = "UPLOAD"
        }
        ["assets_file"] = new FileUploader {
          title = "Assets file"
          fileTypes { "text/csv" }
          required = false
          helpText = "Select the file containing the relational assets to import."
          placeholderText = "Select assets CSV file"
        }
        ["assets_s3_region"] = new TextInput {
          title = "S3 region"
          required = false
          helpText = "Enter the S3 region from which to retrieve the S3 object. If empty, will use the region of Atlan's own back-end storage."
          placeholderText = "ap-south-1"
          width = 4
        }
        ["assets_s3_bucket"] = new TextInput {
          title = "S3 bucket"
          required = false
          helpText = "Enter the S3 bucket from which to retrieve the S3 object. If empty, will use the bucket of Atlan's own back-end storage."
          placeholderText = "bucket-name"
          width = 4
        }
        ["assets_s3_object_key"] = new TextInput {
          title = "S3 object key"
          required = false
          helpText = "Enter the S3 object key, including the name of the object and its prefix (path) in the S3 bucket."
          placeholderText = "some/where/file.csv"
          width = 8
        }
        ["assets_gcs_project"] = new TextInput {
          title = "Project ID"
          required = false
          helpText = "Enter the ID of the GCP project."
          placeholderText = ""
          width = 4
        }
        ["assets_gcs_bucket"] = new TextInput {
          title = "GCS bucket"
          required = false
          helpText = "Enter the GCS bucket from which to retrieve the GCS object."
          placeholderText = "bucket-name"
          width = 4
        }
        ["assets_gcs_object_key"] = new TextInput {
          title = "GCS object key"
          required = false
          helpText = "Enter the GCS object key, including the name of the object and its prefix (path) in the GCS bucket."
          placeholderText = "some/where/file.csv"
          width = 8
        }
        ["assets_gcs_credential_json"] = new TextInput {
          title = "Service account JSON"
          required = false
          helpText = "Enter the JSON for your service account credentials."
          placeholderText = "{\"type\":\"service_account\",\"project_id\":\"gcs-connector-399418\", ..."
          width = 8
        }
        ["assets_adls_account"] = new TextInput {
          title = "Account name"
          required = false
          helpText = "Enter the name of your ADLS storage account."
          placeholderText = ""
          width = 4
        }
        ["assets_adls_container"] = new TextInput {
          title = "ADLS container"
          required = false
          helpText = "Enter the ADLS container from which to retrieve the ADLS object."
          placeholderText = "container-name"
          width = 4
        }
        ["assets_adls_object_key"] = new TextInput {
          title = "ADLS object key"
          required = false
          helpText = "Enter the ADLS object key, including the name of the object and its prefix (path) in the ADLS container."
          placeholderText = "some/where/file.csv"
          width = 8
        }
        ["assets_adls_sas_token"] = new PasswordInput {
          title = "Shared access secret (SAS) token"
          required = false
          helpText = "Enter the JSON for your service account credentials."
          width = 8
        }
        ["assets_upsert_semantic"] = new Radio {
          title = "Input handling"
          required = false
          possibleValues {
            ["upsert"] = "Create (full) and update"
            ["partial"] = "Create (partial) and update"
            ["update"] = "Update only"
          }
          default = "upsert"
          helpText = "Whether to allow the creation of new (full or partial) assets from the input CSV, or ensure assets are only updated if they already exist in Atlan."
        }
        ["assets_config_type"] = new Radio {
          title = "Options"
          required = true
          possibleValues {
            ["default"] = "Default"
            ["advanced"] = "Advanced"
          }
          default = "default"
          helpText = "Options to optimize how assets are imported."
        }
        ["assets_attr_to_overwrite"] = new DropDown {
          title = "Remove attributes, if empty"
          required = false
          possibleValues {
            ["certificateStatus"] = "Certificate"
            ["announcementType"] = "Announcement"
            ["displayName"] = "Display name"
            ["description"] = "Description (system)"
            ["userDescription"] = "Description (user)"
            ["ownerUsers"] = "Owners (users)"
            ["ownerGroups"] = "Owners (groups)"
            ["assignedTerms"] = "Assigned terms"
            ["readme"] = "README"
          }
          helpText = "Select attributes you want to clear (remove) from assets if their value is blank in the provided file."
          multiSelect = true
          width = 8
        }
        ["assets_fail_on_errors"] = new BooleanInput {
          title = "Fail on errors"
          required = false
          helpText = "Whether an invalid value in a field should cause the import to fail (Yes) or log a warning, skip that value, and proceed (No)."
        }
        ["assets_field_separator"] = new TextInput {
          title = "Field separator"
          required = false
          helpText = "Character used to separate fields in the input file (for example, ',' or ';')."
          placeholderText = ","
          width = 4
        }
        ["assets_batch_size"] = new NumericInput {
          title = "Batch size"
          required = false
          helpText = "Maximum number of rows to process at a time (per API request)."
          placeholderValue = 20
          width = 4
        }
        ["track_batches"] = new BooleanInput {
          title = "Track asset details"
          required = false
          hide = true
          defaultSelection = true
          helpText = "Whether to track details about every asset across batches (Yes) or only counts (No)."
        }
      }
    }
  }
  rules {
    new UIRule {
      whenInputs { ["assets_import_type"] = "UPLOAD" }
      required { "assets_file" }
    }
    new UIRule {
      whenInputs { ["assets_import_type"] = "S3" }
      required {
        "assets_s3_region"
        "assets_s3_bucket"
        "assets_s3_object_key"
      }
    }
    new UIRule {
      whenInputs { ["assets_import_type"] = "GCS" }
      required {
        "assets_gcs_project"
        "assets_gcs_bucket"
        "assets_gcs_object_key"
        "assets_gcs_credential_json"
      }
    }
    new UIRule {
      whenInputs { ["assets_import_type"] = "ADLS" }
      required {
        "assets_adls_account"
        "assets_adls_container"
        "assets_adls_object_key"
        "assets_adls_sas_token"
      }
    }
    new UIRule {
      whenInputs { ["assets_config_type"] = "advanced" }
      required {
        "assets_attr_to_overwrite"
        "assets_fail_on_errors"
        "assets_field_separator"
        "assets_batch_size"
      }
    }
  }
}
